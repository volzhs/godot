<?xml version="1.0" encoding="UTF-8" ?>
<class name="RemoteTransform2D" inherits="Node2D" category="Core" version="3.0-alpha">
	<brief_description>
		RemoteTransform2D leads the [Transform2D] of another [CanvasItem] derived Node in the scene.
	</brief_description>
	<description>
		RemoteTransform2D leads the [Transform2D] of another [CanvasItem] derived Node (called the remote node) in the scene.
		It can be set to track another Node's position, rotation and/or scale. It can update using either global or local coordinates.
	</description>
	<tutorials>
	</tutorials>
	<demos>
	</demos>
	<methods>
		<method name="get_remote_node" qualifiers="const">
			<return type="NodePath">
			</return>
			<description>
				Returns the [NodePath] to the remote node, relative to the RemoteTransform2D's position in the scene.
			</description>
		</method>
		<method name="get_update_position" qualifiers="const">
			<return type="bool">
			</return>
			<description>
				Returns if the RemoteTransform2D is tracking position.
			</description>
		</method>
		<method name="get_update_rotation" qualifiers="const">
			<return type="bool">
			</return>
			<description>
				Returns if the RemoteTransform2D is tracking rotation.
			</description>
		</method>
		<method name="get_update_scale" qualifiers="const">
			<return type="bool">
			</return>
			<description>
				Returns if the RemoteTransform2D is tracking scale.
			</description>
		</method>
		<method name="get_use_global_coordinates" qualifiers="const">
			<return type="bool">
			</return>
			<description>
				Returns if the RemoteTransform2D is tracking using global coordinates.
			</description>
		</method>
		<method name="set_remote_node">
			<return type="void">
			</return>
			<argument index="0" name="path" type="NodePath">
			</argument>
			<description>
				Sets the path to the remote node, relative to the RemoteTransform2D's position in the node scene.
			</description>
		</method>
		<method name="set_update_position">
			<return type="void">
			</return>
			<argument index="0" name="update_remote_position" type="bool">
			</argument>
			<description>
				Sets whether or not the position will be tracked.
			</description>
		</method>
		<method name="set_update_rotation">
			<return type="void">
			</return>
			<argument index="0" name="update_remote_rotation" type="bool">
			</argument>
			<description>
				Sets whether or not the rotation will be tracked.
			</description>
		</method>
		<method name="set_update_scale">
			<return type="void">
			</return>
			<argument index="0" name="update_remote_scale" type="bool">
			</argument>
			<description>
				Sets whether or not the scale will be tracked.
			</description>
		</method>
		<method name="set_use_global_coordinates">
			<return type="void">
			</return>
			<argument index="0" name="use_global_coordinates" type="bool">
			</argument>
			<description>
				Set whether or not to use global coordinates for tracking.

				If [code]true[/code], RemoteTransform2D will track using global coordinates, while if it's
				[code]false[/code] it will track using local coordinates.
			</description>
		</method>
	</methods>
	<members>
		<member name="remote_path" type="NodePath" setter="set_remote_node" getter="get_remote_node">
			The [NodePath] to the remote node, relative to the RemoteTransform2D's position in the scene.
		</member>
		<member name="update_position" type="bool" setter="set_update_position" getter="get_update_position">
			If [code]true[/code] the remote node's position is tracked. Default value: [code]true[/code].
		</member>
		<member name="update_rotation" type="bool" setter="set_update_rotation" getter="get_update_rotation">
			If [code]true[/code] the remote node's rotation is tracked. Default value: [code]true[/code].
		</member>
		<member name="update_scale" type="bool" setter="set_update_scale" getter="get_update_scale">
			If [code]true[/code] the remote node's scale is tracked. Default value: [code]true[/code].
		</member>
		<member name="use_global_coordinates" type="bool" setter="set_use_global_coordinates" getter="get_use_global_coordinates">
			If [code]true[/code] global coordinates are used. If [code]false[/code] local coordinates are used. Default value: [code]true[/code].
		</member>
	</members>
	<constants>
	</constants>
</class>
