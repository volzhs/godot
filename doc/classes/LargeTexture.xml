<?xml version="1.0" encoding="UTF-8" ?>
<class name="LargeTexture" inherits="Texture" category="Core" version="3.0.alpha.custom_build">
	<brief_description>
		A Texture capable of storing many smaller Textures with offsets.
	</brief_description>
	<description>
		A Texture capable of storing many smaller Textures with offsets.
		You can dynamically add pieces([Texture]) to this [code]LargeTexture[/code] using different offsets.
	</description>
	<tutorials>
	</tutorials>
	<demos>
	</demos>
	<methods>
		<method name="add_piece">
			<return type="int">
			</return>
			<argument index="0" name="ofs" type="Vector2">
			</argument>
			<argument index="1" name="texture" type="Texture">
			</argument>
			<description>
				Add another [Texture] to this [code]LargeTexture[/code], starting on offset "ofs".
			</description>
		</method>
		<method name="clear">
			<return type="void">
			</return>
			<description>
				Clears the [code]LargeTexture[/code].
			</description>
		</method>
		<method name="get_piece_count" qualifiers="const">
			<return type="int">
			</return>
			<description>
				Returns the number of pieces currently in this [code]LargeTexture[/code].
			</description>
		</method>
		<method name="get_piece_offset" qualifiers="const">
			<return type="Vector2">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<description>
				Returns the offset of the piece with index "idx".
			</description>
		</method>
		<method name="get_piece_texture" qualifiers="const">
			<return type="Texture">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<description>
				Returns the [Texture] of the piece with index "idx".
			</description>
		</method>
		<method name="set_piece_offset">
			<return type="void">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<argument index="1" name="ofs" type="Vector2">
			</argument>
			<description>
				Sets the offset of the piece with index "idx" to "ofs".
			</description>
		</method>
		<method name="set_piece_texture">
			<return type="void">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<argument index="1" name="texture" type="Texture">
			</argument>
			<description>
				Sets the [Texture] of the piece with index "idx" to  "ofs".
			</description>
		</method>
		<method name="set_size">
			<return type="void">
			</return>
			<argument index="0" name="size" type="Vector2">
			</argument>
			<description>
				Sets the size of this [code]LargeTexture[/code].
			</description>
		</method>
	</methods>
	<members>
		<member name="_data" type="Array" setter="_set_data" getter="_get_data">
			Returns an [Array] with offsets and textures data of each added piece. Schema is [offsets1, texture1, offsets2, texture2, large_texture_size].
			[code]offsets[/code] : [Vector2] offsets of the texture piece.
			[code]second[/code] : [StreamTexture] data of the texture piece.
			[code]last entry[/code] : [Vector2] size of the entire large texture.
		</member>
	</members>
	<constants>
	</constants>
</class>
