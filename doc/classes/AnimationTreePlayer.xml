<?xml version="1.0" encoding="UTF-8" ?>
<class name="AnimationTreePlayer" inherits="Node" category="Core" version="3.0.alpha.custom_build">
	<brief_description>
		Animation Player that uses a node graph for the blending.
	</brief_description>
	<description>
		Animation Player that uses a node graph for the blending. This kind of player is very useful when animating character or other skeleton based rigs, because it can combine several animations to form a desired pose.
	</description>
	<tutorials>
	</tutorials>
	<demos>
	</demos>
	<methods>
		<method name="add_node">
			<return type="void">
			</return>
			<argument index="0" name="type" type="int" enum="AnimationTreePlayer.NodeType">
			</argument>
			<argument index="1" name="id" type="String">
			</argument>
			<description>
				Add a node of a given type in the graph with given id.
			</description>
		</method>
		<method name="advance">
			<return type="void">
			</return>
			<argument index="0" name="delta" type="float">
			</argument>
			<description>
			</description>
		</method>
		<method name="animation_node_get_animation" qualifiers="const">
			<return type="Animation">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<description>
				Returns an animation given its name.
			</description>
		</method>
		<method name="animation_node_get_master_animation" qualifiers="const">
			<return type="String">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<description>
			</description>
		</method>
		<method name="animation_node_set_animation">
			<return type="void">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<argument index="1" name="animation" type="Animation">
			</argument>
			<description>
				Set the animation for an animation node.
			</description>
		</method>
		<method name="animation_node_set_filter_path">
			<return type="void">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<argument index="1" name="path" type="NodePath">
			</argument>
			<argument index="2" name="enable" type="bool">
			</argument>
			<description>
			</description>
		</method>
		<method name="animation_node_set_master_animation">
			<return type="void">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<argument index="1" name="source" type="String">
			</argument>
			<description>
			</description>
		</method>
		<method name="are_nodes_connected" qualifiers="const">
			<return type="bool">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<argument index="1" name="dst_id" type="String">
			</argument>
			<argument index="2" name="dst_input_idx" type="int">
			</argument>
			<description>
				Returns whether node [code]id[/code] and [code]dst_id[/code] are connected at the specified slot.
			</description>
		</method>
		<method name="blend2_node_get_amount" qualifiers="const">
			<return type="float">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<description>
				Returns the blend amount of a Blend2 node given its name.
			</description>
		</method>
		<method name="blend2_node_set_amount">
			<return type="void">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<argument index="1" name="blend" type="float">
			</argument>
			<description>
				Sets the blend amount of a Blend2 node given its name and value.
			</description>
		</method>
		<method name="blend2_node_set_filter_path">
			<return type="void">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<argument index="1" name="path" type="NodePath">
			</argument>
			<argument index="2" name="enable" type="bool">
			</argument>
			<description>
			</description>
		</method>
		<method name="blend3_node_get_amount" qualifiers="const">
			<return type="float">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<description>
				Returns the blend amount of a Blend3 node given its name.
			</description>
		</method>
		<method name="blend3_node_set_amount">
			<return type="void">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<argument index="1" name="blend" type="float">
			</argument>
			<description>
				Sets the blend amount of a Blend3 node given its name and value.
			</description>
		</method>
		<method name="blend4_node_get_amount" qualifiers="const">
			<return type="Vector2">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<description>
				Returns the blend amount of a Blend4 node given its name.
			</description>
		</method>
		<method name="blend4_node_set_amount">
			<return type="void">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<argument index="1" name="blend" type="Vector2">
			</argument>
			<description>
				Sets the blend amount of a Blend4 node given its name and value.
			</description>
		</method>
		<method name="connect_nodes">
			<return type="int" enum="Error">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<argument index="1" name="dst_id" type="String">
			</argument>
			<argument index="2" name="dst_input_idx" type="int">
			</argument>
			<description>
				Connects node [code]id[/code] to [code]dst_id[/code] at the specified input slot.
			</description>
		</method>
		<method name="disconnect_nodes">
			<return type="void">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<argument index="1" name="dst_input_idx" type="int">
			</argument>
			<description>
				Disconnects nodes connected to [code]id[/code] at the specified input slot.
			</description>
		</method>
		<method name="get_animation_process_mode" qualifiers="const">
			<return type="int" enum="AnimationTreePlayer.AnimationProcessMode">
			</return>
			<description>
				Returns playback process mode of this AnimationTreePlayer.
			</description>
		</method>
		<method name="get_base_path" qualifiers="const">
			<return type="NodePath">
			</return>
			<description>
			</description>
		</method>
		<method name="get_master_player" qualifiers="const">
			<return type="NodePath">
			</return>
			<description>
			</description>
		</method>
		<method name="get_node_list">
			<return type="PoolStringArray">
			</return>
			<description>
				Returns a PoolStringArray containing the name of all nodes.
			</description>
		</method>
		<method name="is_active" qualifiers="const">
			<return type="bool">
			</return>
			<description>
				Returns whether this AnimationTreePlayer is active.
			</description>
		</method>
		<method name="mix_node_get_amount" qualifiers="const">
			<return type="float">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<description>
				Returns mix amount of a Mix node given its name.
			</description>
		</method>
		<method name="mix_node_set_amount">
			<return type="void">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<argument index="1" name="ratio" type="float">
			</argument>
			<description>
				Sets mix amount of a Mix node given its name and value.
			</description>
		</method>
		<method name="node_exists" qualifiers="const">
			<return type="bool">
			</return>
			<argument index="0" name="node" type="String">
			</argument>
			<description>
				Check if a node exists (by name).
			</description>
		</method>
		<method name="node_get_input_count" qualifiers="const">
			<return type="int">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<description>
				Return the input count for a given node. Different types of nodes have different amount of inputs.
			</description>
		</method>
		<method name="node_get_input_source" qualifiers="const">
			<return type="String">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<argument index="1" name="idx" type="int">
			</argument>
			<description>
				Return the input source for a given node input.
			</description>
		</method>
		<method name="node_get_position" qualifiers="const">
			<return type="Vector2">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<description>
				Returns position of a node in the graph given its name.
			</description>
		</method>
		<method name="node_get_type" qualifiers="const">
			<return type="int" enum="AnimationTreePlayer.NodeType">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<description>
				Get the node type, will return from NODE_* enum.
			</description>
		</method>
		<method name="node_rename">
			<return type="int" enum="Error">
			</return>
			<argument index="0" name="node" type="String">
			</argument>
			<argument index="1" name="new_name" type="String">
			</argument>
			<description>
				Rename a node in the graph.
			</description>
		</method>
		<method name="node_set_position">
			<return type="void">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<argument index="1" name="screen_position" type="Vector2">
			</argument>
			<description>
				Sets position of a node in the graph given its name and position.
			</description>
		</method>
		<method name="oneshot_node_get_autorestart_delay" qualifiers="const">
			<return type="float">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<description>
				Returns autostart delay of a OneShot node given its name.
			</description>
		</method>
		<method name="oneshot_node_get_autorestart_random_delay" qualifiers="const">
			<return type="float">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<description>
				Returns autostart random delay of a OneShot node given its name.
			</description>
		</method>
		<method name="oneshot_node_get_fadein_time" qualifiers="const">
			<return type="float">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<description>
				Returns fade in time of a OneShot node given its name.
			</description>
		</method>
		<method name="oneshot_node_get_fadeout_time" qualifiers="const">
			<return type="float">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<description>
				Returns fade out time of a OneShot node given its name.
			</description>
		</method>
		<method name="oneshot_node_has_autorestart" qualifiers="const">
			<return type="bool">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<description>
				Returns whether a OneShot node will auto restart given its name.
			</description>
		</method>
		<method name="oneshot_node_is_active" qualifiers="const">
			<return type="bool">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<description>
				Returns whether a OneShot node is active given its name.
			</description>
		</method>
		<method name="oneshot_node_set_autorestart">
			<return type="void">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<argument index="1" name="enable" type="bool">
			</argument>
			<description>
				Sets autorestart property of a OneShot node given its name and value.
			</description>
		</method>
		<method name="oneshot_node_set_autorestart_delay">
			<return type="void">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<argument index="1" name="delay_sec" type="float">
			</argument>
			<description>
				Sets autorestart delay of a OneShot node given its name and value in seconds.
			</description>
		</method>
		<method name="oneshot_node_set_autorestart_random_delay">
			<return type="void">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<argument index="1" name="rand_sec" type="float">
			</argument>
			<description>
				Sets autorestart random delay of a OneShot node given its name and value in seconds.
			</description>
		</method>
		<method name="oneshot_node_set_fadein_time">
			<return type="void">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<argument index="1" name="time_sec" type="float">
			</argument>
			<description>
				Sets fade in time of a OneShot node given its name and value in seconds.
			</description>
		</method>
		<method name="oneshot_node_set_fadeout_time">
			<return type="void">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<argument index="1" name="time_sec" type="float">
			</argument>
			<description>
				Sets fade out time of a OneShot node given its name and value in seconds.
			</description>
		</method>
		<method name="oneshot_node_set_filter_path">
			<return type="void">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<argument index="1" name="path" type="NodePath">
			</argument>
			<argument index="2" name="enable" type="bool">
			</argument>
			<description>
			</description>
		</method>
		<method name="oneshot_node_start">
			<return type="void">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<description>
				Starts a OneShot node given its name.
			</description>
		</method>
		<method name="oneshot_node_stop">
			<return type="void">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<description>
				Stops a OneShot node given its name.
			</description>
		</method>
		<method name="recompute_caches">
			<return type="void">
			</return>
			<description>
			</description>
		</method>
		<method name="remove_node">
			<return type="void">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<description>
			</description>
		</method>
		<method name="reset">
			<return type="void">
			</return>
			<description>
				Resets this AnimationTreePlayer.
			</description>
		</method>
		<method name="set_active">
			<return type="void">
			</return>
			<argument index="0" name="enabled" type="bool">
			</argument>
			<description>
				Sets whether this AnimationTreePlayer is active. AnimationTreePlayer will start processing if set to active.
			</description>
		</method>
		<method name="set_animation_process_mode">
			<return type="void">
			</return>
			<argument index="0" name="mode" type="int" enum="AnimationTreePlayer.AnimationProcessMode">
			</argument>
			<description>
				Sets process mode (ANIMATION_PROCESS_*) of this AnimationTreePlayer.
			</description>
		</method>
		<method name="set_base_path">
			<return type="void">
			</return>
			<argument index="0" name="path" type="NodePath">
			</argument>
			<description>
				Sets base path of this AnimationTreePlayer.
			</description>
		</method>
		<method name="set_master_player">
			<return type="void">
			</return>
			<argument index="0" name="nodepath" type="NodePath">
			</argument>
			<description>
			</description>
		</method>
		<method name="timescale_node_get_scale" qualifiers="const">
			<return type="float">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<description>
				Returns time scale value of a TimeScale node given its name.
			</description>
		</method>
		<method name="timescale_node_set_scale">
			<return type="void">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<argument index="1" name="scale" type="float">
			</argument>
			<description>
				Sets time scale value of a TimeScale node given its name and value.
			</description>
		</method>
		<method name="timeseek_node_seek">
			<return type="void">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<argument index="1" name="seconds" type="float">
			</argument>
			<description>
				Sets time seek value of a TimeSeek node given its name and value.
			</description>
		</method>
		<method name="transition_node_delete_input">
			<return type="void">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<argument index="1" name="input_idx" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="transition_node_get_current" qualifiers="const">
			<return type="int">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<description>
			</description>
		</method>
		<method name="transition_node_get_input_count" qualifiers="const">
			<return type="int">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<description>
			</description>
		</method>
		<method name="transition_node_get_xfade_time" qualifiers="const">
			<return type="float">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<description>
			</description>
		</method>
		<method name="transition_node_has_input_auto_advance" qualifiers="const">
			<return type="bool">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<argument index="1" name="input_idx" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="transition_node_set_current">
			<return type="void">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<argument index="1" name="input_idx" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="transition_node_set_input_auto_advance">
			<return type="void">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<argument index="1" name="input_idx" type="int">
			</argument>
			<argument index="2" name="enable" type="bool">
			</argument>
			<description>
			</description>
		</method>
		<method name="transition_node_set_input_count">
			<return type="void">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<argument index="1" name="count" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="transition_node_set_xfade_time">
			<return type="void">
			</return>
			<argument index="0" name="id" type="String">
			</argument>
			<argument index="1" name="time_sec" type="float">
			</argument>
			<description>
			</description>
		</method>
	</methods>
	<members>
		<member name="playback_process_mode" type="int" setter="set_animation_process_mode" getter="get_animation_process_mode" enum="AnimationTreePlayer.AnimationProcessMode">
		</member>
	</members>
	<constants>
		<constant name="NODE_OUTPUT" value="0">
			Output node.
		</constant>
		<constant name="NODE_ANIMATION" value="1">
			Animation node.
		</constant>
		<constant name="NODE_ONESHOT" value="2">
			OneShot node.
		</constant>
		<constant name="NODE_MIX" value="3">
			Mix node.
		</constant>
		<constant name="NODE_BLEND2" value="4">
			Blend2 node.
		</constant>
		<constant name="NODE_BLEND3" value="5">
			Blend3 node.
		</constant>
		<constant name="NODE_BLEND4" value="6">
			Blend4 node.
		</constant>
		<constant name="NODE_TIMESCALE" value="7">
			TimeScale node.
		</constant>
		<constant name="NODE_TIMESEEK" value="8">
			TimeSeek node.
		</constant>
		<constant name="NODE_TRANSITION" value="9">
			Transition node.
		</constant>
		<constant name="ANIMATION_PROCESS_FIXED" value="0">
		</constant>
		<constant name="ANIMATION_PROCESS_IDLE" value="1">
		</constant>
	</constants>
</class>
