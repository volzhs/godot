<?xml version="1.0" encoding="UTF-8" ?>
<class name="Rect3" category="Built-In Types" version="3.0.alpha.custom_build">
	<brief_description>
		Axis-Aligned Bounding Box.
	</brief_description>
	<description>
		Rect3 provides an 3D Axis-Aligned Bounding Box. It consists of a position, a size, and several utility functions. It is typically used for simple (fast) overlap tests.
	</description>
	<tutorials>
	</tutorials>
	<demos>
	</demos>
	<methods>
		<method name="Rect3">
			<return type="Rect3">
			</return>
			<argument index="0" name="position" type="Vector3">
			</argument>
			<argument index="1" name="size" type="Vector3">
			</argument>
			<description>
				Optional constructor, accepts position and size.
			</description>
		</method>
		<method name="encloses">
			<return type="bool">
			</return>
			<argument index="0" name="with" type="Rect3">
			</argument>
			<description>
				Return true if this [Rect3] completely encloses another one.
			</description>
		</method>
		<method name="expand">
			<return type="Rect3">
			</return>
			<argument index="0" name="to_point" type="Vector3">
			</argument>
			<description>
				Return this [Rect3] expanded to include a given point.
			</description>
		</method>
		<method name="get_area">
			<return type="float">
			</return>
			<description>
				Get the area of the [Rect3].
			</description>
		</method>
		<method name="get_endpoint">
			<return type="Vector3">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<description>
				Get the position of the 8 endpoints of the [Rect3] in space.
			</description>
		</method>
		<method name="get_longest_axis">
			<return type="Vector3">
			</return>
			<description>
				Return the normalized longest axis of the [Rect3].
			</description>
		</method>
		<method name="get_longest_axis_index">
			<return type="int">
			</return>
			<description>
				Return the index of the longest axis of the [Rect3] (according to [Vector3]::AXIS* enum).
			</description>
		</method>
		<method name="get_longest_axis_size">
			<return type="float">
			</return>
			<description>
				Return the scalar length of the longest axis of the [Rect3].
			</description>
		</method>
		<method name="get_shortest_axis">
			<return type="Vector3">
			</return>
			<description>
				Return the normalized shortest axis of the [Rect3].
			</description>
		</method>
		<method name="get_shortest_axis_index">
			<return type="int">
			</return>
			<description>
				Return the index of the shortest axis of the [Rect3] (according to [Vector3]::AXIS* enum).
			</description>
		</method>
		<method name="get_shortest_axis_size">
			<return type="float">
			</return>
			<description>
				Return the scalar length of the shortest axis of the [Rect3].
			</description>
		</method>
		<method name="get_support">
			<return type="Vector3">
			</return>
			<argument index="0" name="dir" type="Vector3">
			</argument>
			<description>
				Return the support point in a given direction. This is useful for collision detection algorithms.
			</description>
		</method>
		<method name="grow">
			<return type="Rect3">
			</return>
			<argument index="0" name="by" type="float">
			</argument>
			<description>
				Return a copy of the [Rect3] grown a given amount of units towards all the sides.
			</description>
		</method>
		<method name="has_no_area">
			<return type="bool">
			</return>
			<description>
				Return true if the [Rect3] is flat or empty.
			</description>
		</method>
		<method name="has_no_surface">
			<return type="bool">
			</return>
			<description>
				Return true if the [Rect3] is empty.
			</description>
		</method>
		<method name="has_point">
			<return type="bool">
			</return>
			<argument index="0" name="point" type="Vector3">
			</argument>
			<description>
				Return true if the [Rect3] contains a point.
			</description>
		</method>
		<method name="intersection">
			<return type="Rect3">
			</return>
			<argument index="0" name="with" type="Rect3">
			</argument>
			<description>
				Return the intersection between two [Rect3]. An empty Rect3 (size 0,0,0) is returned on failure.
			</description>
		</method>
		<method name="intersects">
			<return type="bool">
			</return>
			<argument index="0" name="with" type="Rect3">
			</argument>
			<description>
				Return true if the [Rect3] overlaps with another.
			</description>
		</method>
		<method name="intersects_plane">
			<return type="bool">
			</return>
			<argument index="0" name="plane" type="Plane">
			</argument>
			<description>
				Return true if the [Rect3] is at both sides of a plane.
			</description>
		</method>
		<method name="intersects_segment">
			<return type="bool">
			</return>
			<argument index="0" name="from" type="Vector3">
			</argument>
			<argument index="1" name="to" type="Vector3">
			</argument>
			<description>
				Return true if the [Rect3] intersects the line segment between from and to
			</description>
		</method>
		<method name="merge">
			<return type="Rect3">
			</return>
			<argument index="0" name="with" type="Rect3">
			</argument>
			<description>
				Combine this [Rect3] with another, a larger one is returned that contains both.
			</description>
		</method>
	</methods>
	<members>
		<member name="end" type="Vector3" setter="" getter="">
			Ending corner.
		</member>
		<member name="position" type="Vector3" setter="" getter="">
		</member>
		<member name="size" type="Vector3" setter="" getter="">
			Size from position to end.
		</member>
	</members>
	<constants>
	</constants>
</class>
