<?xml version="1.0" encoding="UTF-8" ?>
<class name="ParallaxBackground" inherits="CanvasLayer" category="Core" version="3.0-alpha">
	<brief_description>
		A node used to create a parallax scrolling background.
	</brief_description>
	<description>
		A ParallaxBackground uses one or more [ParallaxLayer] child nodes to create a parallax effect. Each [ParallaxLayer] can move at a different speed using [member ParallaxLayer.motion_offset]. This creates an illusion of depth in a 2D game. If not used with a [Camera2D], you must manually calculate the [member scroll_offset].
	</description>
	<tutorials>
	</tutorials>
	<demos>
	</demos>
	<methods>
		<method name="get_limit_begin" qualifiers="const">
			<return type="Vector2">
			</return>
			<description>
				Return the beginning limit.
			</description>
		</method>
		<method name="get_limit_end" qualifiers="const">
			<return type="Vector2">
			</return>
			<description>
				Return the ending limit.
			</description>
		</method>
		<method name="get_scroll_base_offset" qualifiers="const">
			<return type="Vector2">
			</return>
			<description>
				Return the base offset.
			</description>
		</method>
		<method name="get_scroll_base_scale" qualifiers="const">
			<return type="Vector2">
			</return>
			<description>
				Return the base motion scale.
			</description>
		</method>
		<method name="get_scroll_offset" qualifiers="const">
			<return type="Vector2">
			</return>
			<description>
			</description>
		</method>
		<method name="is_ignore_camera_zoom">
			<return type="bool">
			</return>
			<description>
				Return ignoring camera zoom.
			</description>
		</method>
		<method name="set_ignore_camera_zoom">
			<return type="void">
			</return>
			<argument index="0" name="ignore" type="bool">
			</argument>
			<description>
				Set to true for all child [ParallaxLayer] nodes to not be affected by the zoom level of the camera.
			</description>
		</method>
		<method name="set_limit_begin">
			<return type="void">
			</return>
			<argument index="0" name="ofs" type="Vector2">
			</argument>
			<description>
				Set the left and top limits in pixels for scrolling to begin. If the camera is outside of this limit the background will not continue to scroll. If an axis is greater than or equal to the corresponding axis of limit_end, then it will not limit scrolling for that axis.
			</description>
		</method>
		<method name="set_limit_end">
			<return type="void">
			</return>
			<argument index="0" name="ofs" type="Vector2">
			</argument>
			<description>
				Set the right and bottom limits in pixels for scrolling to end. If the camera is outside of this limit the background will not continue to scroll. If an axis is less than or equal to the corresponding axis of limit_begin, then it will not limit scrolling for that axis.
			</description>
		</method>
		<method name="set_scroll_base_offset">
			<return type="void">
			</return>
			<argument index="0" name="ofs" type="Vector2">
			</argument>
			<description>
				Set the base offset in pixels of all children [ParallaxLayer] nodes.
			</description>
		</method>
		<method name="set_scroll_base_scale">
			<return type="void">
			</return>
			<argument index="0" name="scale" type="Vector2">
			</argument>
			<description>
				Set the base motion scale of all children [ParallaxLayer] nodes.
			</description>
		</method>
		<method name="set_scroll_offset">
			<return type="void">
			</return>
			<argument index="0" name="ofs" type="Vector2">
			</argument>
			<description>
			</description>
		</method>
	</methods>
	<members>
		<member name="scroll_base_offset" type="Vector2" setter="set_scroll_base_offset" getter="get_scroll_base_offset">
			Base position offset of all [ParallaxLayer] children.
		</member>
		<member name="scroll_base_scale" type="Vector2" setter="set_scroll_base_scale" getter="get_scroll_base_scale">
			Base motion scale of all [ParallaxLayer] children.
		</member>
		<member name="scroll_ignore_camera_zoom" type="bool" setter="set_ignore_camera_zoom" getter="is_ignore_camera_zoom">
			If [code]true[/code] elements in [ParallaxLayer] child aren't affected by the zoom level of the camera.
		</member>
		<member name="scroll_limit_begin" type="Vector2" setter="set_limit_begin" getter="get_limit_begin">
			Top left limits for scrolling to begin. If the camera is outside of this limit the background will stop scrolling. Must be lower than [member scroll_limit_end] to work.
		</member>
		<member name="scroll_limit_end" type="Vector2" setter="set_limit_end" getter="get_limit_end">
			Right bottom limits for scrolling to end. If the camera is outside of this limit the background will stop scrolling. Must be higher than [member scroll_limit_begin] to work.
		</member>
		<member name="scroll_offset" type="Vector2" setter="set_scroll_offset" getter="get_scroll_offset">
			The ParallaxBackground's scroll value. Calculated automatically when using a [Camera2D], but can be used to manually manage scrolling when no camera is present.
		</member>
	</members>
	<constants>
	</constants>
</class>
