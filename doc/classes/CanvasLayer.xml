<?xml version="1.0" encoding="UTF-8" ?>
<class name="CanvasLayer" inherits="Node" category="Core" version="3.0.alpha.custom_build">
	<brief_description>
		Canvas drawing layer.
	</brief_description>
	<description>
		Canvas drawing layer. [CanvasItem] nodes that are direct or indirect children of a [CanvasLayer] will be drawn in that layer. The layer is a numeric index that defines the draw order. The default 2D scene renders with index 0, so a [CanvasLayer] with index -1 will be drawn below, and one with index 1 will be drawn above. This is very useful for HUDs (in layer 1+ or above), or backgrounds (in layer -1 or below).
	</description>
	<tutorials>
	</tutorials>
	<demos>
	</demos>
	<methods>
		<method name="get_custom_viewport" qualifiers="const">
			<return type="Node">
			</return>
			<description>
			</description>
		</method>
		<method name="get_layer" qualifiers="const">
			<return type="int">
			</return>
			<description>
				Return the layer index, determines the draw order, a lower value will be below a higher one.
			</description>
		</method>
		<method name="get_offset" qualifiers="const">
			<return type="Vector2">
			</return>
			<description>
				Return the base offset for this layer (helper).
			</description>
		</method>
		<method name="get_rotation" qualifiers="const">
			<return type="float">
			</return>
			<description>
				Return the base rotation for this layer in radians (helper).
			</description>
		</method>
		<method name="get_rotationd" qualifiers="const">
			<return type="float">
			</return>
			<description>
				Return the base rotation for this layer in degrees.
			</description>
		</method>
		<method name="get_scale" qualifiers="const">
			<return type="Vector2">
			</return>
			<description>
				Return the base scale for this layer (helper).
			</description>
		</method>
		<method name="get_transform" qualifiers="const">
			<return type="Transform2D">
			</return>
			<description>
				Return the base transform for this layer.
			</description>
		</method>
		<method name="get_world_2d" qualifiers="const">
			<return type="World2D">
			</return>
			<description>
				Return the [World2D] used by this layer.
			</description>
		</method>
		<method name="set_custom_viewport">
			<return type="void">
			</return>
			<argument index="0" name="viewport" type="Node">
			</argument>
			<description>
			</description>
		</method>
		<method name="set_layer">
			<return type="void">
			</return>
			<argument index="0" name="layer" type="int">
			</argument>
			<description>
				Set the layer index, determines the draw order, a lower value will be below a higher one.
			</description>
		</method>
		<method name="set_offset">
			<return type="void">
			</return>
			<argument index="0" name="offset" type="Vector2">
			</argument>
			<description>
				Set the base offset for this layer (helper).
			</description>
		</method>
		<method name="set_rotation">
			<return type="void">
			</return>
			<argument index="0" name="radians" type="float">
			</argument>
			<description>
				Set the base rotation for this layer in radians (helper).
			</description>
		</method>
		<method name="set_rotationd">
			<return type="void">
			</return>
			<argument index="0" name="degrees" type="float">
			</argument>
			<description>
				Set the base rotation for this layer in degrees (helper).
			</description>
		</method>
		<method name="set_scale">
			<return type="void">
			</return>
			<argument index="0" name="scale" type="Vector2">
			</argument>
			<description>
				Set the base scale for this layer (helper).
			</description>
		</method>
		<method name="set_transform">
			<return type="void">
			</return>
			<argument index="0" name="transform" type="Transform2D">
			</argument>
			<description>
				Set the base transform for this layer.
			</description>
		</method>
	</methods>
	<members>
		<member name="layer" type="int" setter="set_layer" getter="get_layer">
			Layer index for draw order. Lower values are drawn first. Default value: [code]1[/code].
		</member>
		<member name="offset" type="Vector2" setter="set_offset" getter="get_offset">
			The layer's base offset.
		</member>
		<member name="rotation" type="float" setter="set_rotationd" getter="get_rotationd">
			The layer's rotation in degrees.
		</member>
		<member name="scale" type="Vector2" setter="set_scale" getter="get_scale">
			The layer's scale.
		</member>
	</members>
	<constants>
	</constants>
</class>
